knitr::opts_chunk$set(echo = TRUE)
#En caso de usa Mac OS X
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
#En caso de usa Windows
#Sys.setlocale("LC_ALL", 'Spanish_Chile.1252')
install_load_library <- function(x){
for( i in x ){
if( ! require( i , character.only = TRUE ) ){
install.packages( i , dependencies = TRUE )
require( i , character.only = TRUE )
}
}
}
#  Then try/install packages...
install_load_library( c('tm', 'SnowballC', 'wordcloud', 'topicmodels') )
reviews = read.csv("https://github.com/rpmunoz/topicos_ingenieria_2/raw/master/clase_1/data/movie-pang02.csv", stringsAsFactors = F)
reviews = read.csv("https://github.com/rpmunoz/topicos_ingenieria_2/raw/master/clase_1/data/movie_reviews-pang_lee_2004.csv", stringsAsFactors = F)
View(reviews)
review_corpus = Corpus(VectorSource(reviews$contenido))
neg_words = read.table("data/negative-words.txt", header = F, stringsAsFactors = F)[, 1]
pos_words = read.table("data/positive-words.txt", header = F, stringsAsFactors = F)[, 1]
reviews$neg = sapply(review_corpus, tm_term_score, neg_words)
neg_words
review_corpus
sapply(review_corpus, tm_term_score, neg_words)
class(review_corpus)
class(neg_words)
help("tm_term_score")
tm_term_score(review_corpus, neg_words, FUN = slam::row_sum)
tdm <- TermDocumentMatrix(review_corpus)
tm_term_score(tdm, neg_words, FUN = slam::row_sum)
tm_term_score(tdm, neg_words)
review_corpus = Corpus(VectorSource(reviews$contenido))
class(review_corpus)
tdm <- TermDocumentMatrix(review_corpus)
class(tdm)
reviews$neg = tm_term_score(tdm, neg_words)
#sapply(review_corpus, tm_term_score, neg_words)
reviews$pos = tm_term_score(tdm, pos_words)
#sapply(review_corpus, tm_term_score, pos_words)
View(reviews)
View(reviews)
reviews$contenido = NULL
reviews = cbind(reviews, as.matrix(review_dtm_tfidf))
review_dtm_tfidf <- DocumentTermMatrix(review_corpus, control = list(weighting = weightTfIdf))
review_dtm_tfidf = removeSparseTerms(review_dtm_tfidf, 0.95)
review_dtm_tfidf
reviews = cbind(reviews, as.matrix(review_dtm_tfidf))
reviews$valoracion = as.factor(reviews$valoracion)
id_train <- sample(nrow(reviews), nrow(reviews)*0.8)
reviews.train = reviews[id_train,]
reviews.test = reviews[-id_train,]
len(reviews.train)
length(reviews.train)
length(reviews.train)
length(reviews.test)
print(length(reviews.train))
length(reviews.test)
print(length(reviews.train))
print(length(reviews.test))
print(length(reviews.test))
length(reviews.test)
length(reviews.train)
nrow(reviews)
nrow(reviews)*0.8
nrow(length(reviews.train))
print(length(reviews.test))
nrow(reviews.train)
print(length(reviews.test))
nrow(reviews.train)
nrow(reviews.test)
cat("Numero de registros en train: ", nrow(reviews.train), "\n")
cat("Numero de registros en test: ", nrow(reviews.test), "\n")
install_load_library( c('rpart', 'rpart.plot', 'e1071', 'nnet') )
reviews.tree = rpart(valoracion~.,  method = "class", data = reviews.train);
prp(reviews.tree)
reviews.glm = glm(valoracion~ ., family = "binomial", data =reviews.train, maxit = 100);
reviews.svm = svm(valoracion~., data = reviews.train);
reviews.nnet = nnet(valoracion~., data=reviews.train, size=1, maxit=500)
help(glm)
pred.tree = predict(reviews.tree, reviews.test,  type="class")
table(reviews.test$valora,pred.tree,dnn=c("Obs","Pred"))
mean(ifelse(reviews.test$valoracion != pred.tree, 1, 0))
pred.glm = as.numeric(predict(reviews.glm, reviews.test, type="response") > 0.5)
table(reviews.test$valoracion,pred.glm,dnn=c("Obs","Pred"))
mean(ifelse(reviews.test$valoracion != pred.glm, 1, 0))
reviews.test$valoracion
pred.glm
length(pred.glm)
ifelse(pred.glm==1,"Positiva","Negativa")
pred.glm = as.numeric(predict(reviews.glm, reviews.test, type="response") > 0.5)
pred.glm = ifelse(pred.glm==1,"Positiva","Negativa")
table(reviews.test$valoracion,pred.glm,dnn=c("Obs","Pred"))
mean(ifelse(reviews.test$valoracion != pred.glm, 1, 0))
pred.svm = predict(reviews.svm, reviews.test)
table(reviews.test$valoracion,pred.svm,dnn=c("Obs","Pred"))
mean(ifelse(reviews.test$polarity != pred.svm, 1, 0))
mean(ifelse(reviews.test$valoracion != pred.svm, 1, 0))
rows(reviews.train)
length(reviews.train)
reviews.nnet = nnet(valoracion~., data=reviews.train, size=1, maxit=500, MaxNWts=1100)
prob.nnet= predict(reviews.nnet,reviews.test)
pred.nnet = as.numeric(prob.nnet > 0.5)
table(reviews.test$valoracion, pred.nnet, dnn=c("Obs","Pred"))
prob.nnet= predict(reviews.nnet,reviews.test)
pred.nnet = as.numeric(prob.nnet > 0.5)
pred.nnet = ifelse(pred.nnet==1,"Positiva","Negativa")
table(reviews.test$valoracion, pred.nnet, dnn=c("Obs","Pred"))
mean(ifelse(reviews.test$valoracion != pred.nnet, 1, 0))
knitr::opts_chunk$set(echo = TRUE)
install_load_library <- function(x){
for( i in x ){
if( ! require( i , character.only = TRUE ) ){
install.packages( i , dependencies = TRUE )
require( i , character.only = TRUE )
}
}
}
#  Then try/install packages...
install_load_library( c('tm', 'SnowballC', 'wordcloud', 'topicmodels') )
reviews = read.csv("https://github.com/rpmunoz/topicos_ingenieria_2/raw/master/clase_1/data/movie_reviews-pang_lee_2004.csv", stringsAsFactors = F)
View(reviews)
review_corpus = Corpus(VectorSource(reviews$contenido))
class(review_corpus)
tdm <- TermDocumentMatrix(review_corpus)
class(tdm)
View(tdm)
setwd("~/Github/topicos_ingenieria_2/clase_2")
reviews$neg = tm_term_score(tdm, neg_words)
#sapply(review_corpus, tm_term_score, neg_words)
reviews$pos = tm_term_score(tdm, pos_words)
#sapply(review_corpus, tm_term_score, pos_words)
View(reviews)
reviews$contenido = NULL
review_dtm_tfidf <- DocumentTermMatrix(review_corpus, control = list(weighting = weightTfIdf))
review_dtm_tfidf = removeSparseTerms(review_dtm_tfidf, 0.95)
review_dtm_tfidf
reviews = cbind(reviews, as.matrix(review_dtm_tfidf))
reviews$valoracion = as.factor(reviews$valoracion)
reviews = cbind(reviews, as.matrix(review_dtm_tfidf))
reviews$valoracion = as.factor(reviews$valoracion)
sapply(review_corpus, tm_term_score, neg_words)
